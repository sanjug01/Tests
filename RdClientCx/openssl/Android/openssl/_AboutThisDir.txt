The configuration file in this directory, is a custom header file generated specifically for Android by the OpenSSL tools.

The generation process for this file is as follows:

1. Download OpenSSL source code and unpack in a directory <OpenSSLDir>. Ideally you should actually use the copy checked-in at //depot/winmain/secure/mspartners/RemoteDesktop/termsrv/openssl 

2. Download and install cygwin. Set the following environment variable:
SETX CYGWIN winsymlinks:nativestrict
This will turn on windows native symbolic links, as cygwin's simulation doesn't work correctly and links are interpreted as actual files by the android compiler.

3. and open a cygwin terminal. Navigate to <OpenSSLDir> before running the script. Please note the difference between ' and ` in the script below. 

export NDK=<path to android NDK>
$NDK/build/tools/make-standalone-toolchain.sh --platform=android-18 --toolchain=arm-linux-androideabi-4.8 --install-dir=`pwd`/android-toolchain-arm --system=windows-x86_64

export TOOLCHAIN_PATH=`pwd`/android-toolchain-arm/bin
export TOOL=arm-linux-androideabi
export NDK_TOOLCHAIN_BASENAME=${TOOLCHAIN_PATH}/${TOOL}
export CC=$NDK_TOOLCHAIN_BASENAME-gcc
export CXX=$NDK_TOOLCHAIN_BASENAME-g++
export LINK=${CXX}
export LD=$NDK_TOOLCHAIN_BASENAME-ld
export AR=$NDK_TOOLCHAIN_BASENAME-ar
export RANLIB=$NDK_TOOLCHAIN_BASENAME-ranlib
export STRIP=$NDK_TOOLCHAIN_BASENAME-strip
export ARCH_FLAGS="-mthumb"
export ARCH_LINK=
export CPPFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 "
export CXXFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 -frtti -fexceptions "
export CFLAGS=" ${ARCH_FLAGS} -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64 "
export LDFLAGS=" ${ARCH_LINK} "
./Configure no-ssl2 no-shared no-asm android

4. Copy the generated file from <OpenSSLDir>/crypto/opensslconf.h to this directory
