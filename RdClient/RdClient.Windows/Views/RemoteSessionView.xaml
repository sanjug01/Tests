<UserControl
    x:Class="RdClient.Views.RemoteSessionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RdClient.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:c="using:RdClient.Controls"
    xmlns:vm="using:RdClient.Shared.ViewModels"
    xmlns:cv="using:RdClient.Shared.Converters"    
    xmlns:input="using:RdClient.Input"
    xmlns:helpers="using:RdClient.Helpers"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="800"
    RequestedTheme="Dark">

    <UserControl.DataContext>
        <vm:RemoteSessionViewModel>
            <!-- Inject the keyboard capture based on CoreWindow and CoreDispatcher -->
            <vm:RemoteSessionViewModel.KeyboardCapture>
                <input:CoreWindowKeyboardCapture/>
            </vm:RemoteSessionViewModel.KeyboardCapture>
            <!-- Inject the input panel factory based on the InputPane class. -->
            <vm:RemoteSessionViewModel.InputPanelFactory>
                <input:InputPaneInputPanelFactory/>
            </vm:RemoteSessionViewModel.InputPanelFactory>
        </vm:RemoteSessionViewModel>
    </UserControl.DataContext>

    <UserControl.Resources>
        <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cv:EnumMemberToSymbolStringConverter x:Key="enumToSymbolString"/>
        <cv:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter" />
        <cv:SessionStateToOpacityConverter x:Key="SessionStateToOpacityConverter" />
    </UserControl.Resources>

    <Grid Background="{ThemeResource SystemBaseMediumHighColor}">
        <cv:RemoteSessionPanel
            RemoteSessionViewSite="{Binding}"
            Opacity="{Binding SessionState, Converter={StaticResource SessionStateToOpacityConverter}}" />

        <!-- Connection Bar -->
        <ItemsControl
            Visibility="{Binding IsConnectionBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            HorizontalAlignment="Center" VerticalAlignment="Top"
            Opacity="{ThemeResource ConnectionOverlayOpacity}"
            ItemsSource="{Binding ConnectionBarItems}">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplateSelector>
                <helpers:TypeNameDataTemplateSelector>
                    <helpers:TypeNameDataTemplateSelector.Templates>

                        <DataTemplate x:Key="SymbolBarButtonModel">
                            <Button
                                Style="{ThemeResource RemoteSessionSymbolBarButton}"
                                Margin="4,0"
                                Command="{Binding Command}"
                                CommandParameter="{Binding CommandParameter}"
                                Visibility="{Binding CanExecute, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Content="{Binding Glyph, Converter={StaticResource enumToSymbolString}}"/>
                        </DataTemplate>

                        <DataTemplate x:Key="SymbolBarToggleButtonModel">
                            <ToggleButton
                                Style="{StaticResource RemoteSessionSymbolBarButton}"
                                Margin="4,0"
                                Command="{Binding Command}"
                                CommandParameter="{Binding CommandParameter}"
                                IsChecked="{Binding IsChecked}"
                                IsThreeState="False"
                                Visibility="{Binding CanExecute, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Content="{Binding Glyph, Converter={StaticResource enumToSymbolString}}"/>
                        </DataTemplate>

                    </helpers:TypeNameDataTemplateSelector.Templates>
                </helpers:TypeNameDataTemplateSelector>
            </ItemsControl.ItemTemplateSelector>
        </ItemsControl>

        <!-- Transparent overlay that dismisses the side bars -->
        <cv:PointerPressDetector
            Visibility="{Binding IsRightSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            PointerPressDetected="{Binding ToggleSideBars}" />

        <!-- Right side bar -->
        <cv:RightSideBarControl
            BarVisibility="{Binding IsRightSideBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            NavigateHome="{Binding NavigateHome}"
            MouseMode="{Binding MouseMode}"/>

        <!--
        Belly-band container of in-session dialogs.
        The band is visible when the BellyBandViewModel property of the remote session view model
        is not null.
        -->
        <Grid Visibility="{Binding BellyBandViewModel, Converter={StaticResource NotNullToVisibilityConverter}}"
              Background="Transparent">
            <!--
            Inner Grid - the belly-band itself
            -->
            <Grid
                VerticalAlignment="Center"
                Height="Auto"
                Background="{ThemeResource DialogBackgroundColor}">

                <ContentControl
                    Margin="0,20"
                    Content="{Binding BellyBandViewModel}"
                    HorizontalContentAlignment="Stretch">

                        <ContentControl.ContentTransitions>
                            <TransitionCollection>
                                <ContentThemeTransition />
                            </TransitionCollection>
                        </ContentControl.ContentTransitions>

                    <ContentControl.ContentTemplateSelector>
                        <helpers:TypeNameDataTemplateSelector>

                            <helpers:TypeNameDataTemplateSelector.Templates>

                                <!--
                                For the RemoteSessionFailureViewModel view model class show RemoteSessionFailureControl.
                                The control will take the RemoteSessionFailureViewModel as its main binding.
                                -->
                                <DataTemplate x:Key="RemoteSessionFailureViewModel">
                                    <cv:RemoteSessionFailureControl />
                                </DataTemplate>

                                <!--
                                RemoteSessionInterruptionViewModel - the session got interrupted and is reconnecting.
                                -->
                                <DataTemplate x:Key="RemoteSessionInterruptionViewModel">
                                    <cv:RemoteSessionInterruptionControl />
                                </DataTemplate>

                                <DataTemplate x:Key="RemoteSessionConnectingViewModel">
                                    <cv:RemoteSessionConnectingControl />
                                </DataTemplate>

                            </helpers:TypeNameDataTemplateSelector.Templates>

                            <helpers:TypeNameDataTemplateSelector.DefaultTemplate>
                                <DataTemplate>
                                    <!-- Template of an unknown belly-band view model -->
                                    <Grid Background="Red">
                                        <Grid Background="White" Margin="5">
                                            <TextBlock Margin="20,20"
                                                       FontSize="20"
                                                       FontWeight="Bold"
                                                       Foreground="Red"
                                                       Text="Unknown belly-band view"/>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </helpers:TypeNameDataTemplateSelector.DefaultTemplate>

                        </helpers:TypeNameDataTemplateSelector>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>

            </Grid>
        </Grid>

        <cv:PanKnob x:Name="PanKnob"
                   PanKnobSite="{Binding PanKnobSite}"/>
    </Grid>
</UserControl>
