<UserControl
    x:Class="RdClient.Views.RemoteSessionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RdClient.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:c="using:RdClient.Controls"
    xmlns:vm="using:RdClient.Shared.ViewModels"
    xmlns:m="using:RdClient.Shared.Models"
    xmlns:cv="using:RdClient.Shared.Converters"
    xmlns:input="using:RdClient.Input"
    xmlns:pointer="using:RdClient.Shared.Input.Pointer"
    xmlns:helpers="using:RdClient.Helpers"
    xmlns:panknob="using:RdClient.Shared.Models.PanKnobModel"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="800"
    RequestedTheme="Dark">
    
    <UserControl.DataContext>
        <vm:RemoteSessionViewModel FullScreenModel="{StaticResource FullScreenModel}" TimerFactory="{StaticResource TimerFactory}">
            <!-- Inject the keyboard capture based on CoreWindow and CoreDispatcher -->
            <vm:RemoteSessionViewModel.KeyboardCapture>
                <input:CoreWindowKeyboardCapture/>
            </vm:RemoteSessionViewModel.KeyboardCapture>
            <vm:RemoteSessionViewModel.RightSideBarViewModel>
                <vm:RightSideBarViewModel
                    FullScreenModel="{StaticResource FullScreenModel}"
                    DeviceCapabilities="{StaticResource DeviceCapabilities}"/>
            </vm:RemoteSessionViewModel.RightSideBarViewModel>
            <vm:RemoteSessionViewModel.PointerPosition>
                <pointer:PointerPosition />
            </vm:RemoteSessionViewModel.PointerPosition>
            <vm:RemoteSessionViewModel.ScrollBarModel>
                <m:ScrollBarModel />
            </vm:RemoteSessionViewModel.ScrollBarModel>
            <vm:RemoteSessionViewModel.PanKnobSite>
                <panknob:PanKnobSite TimerFactory="{StaticResource TimerFactory}"/>
            </vm:RemoteSessionViewModel.PanKnobSite>
        </vm:RemoteSessionViewModel>
    </UserControl.DataContext>

    <UserControl.Resources>
        <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cv:EnumMemberToSymbolStringConverter x:Key="enumToSymbolString"/>
        <cv:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter" />
        <cv:SessionStateToOpacityConverter x:Key="SessionStateToOpacityConverter" />
    </UserControl.Resources>

    <Canvas x:Name="SessionPanelContainer" Background="{ThemeResource SystemChromeDisabledHighColor}">
        <Grid x:Name="SessionPanel">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Background="{ThemeResource SystemChromeDisabledHighColor}" Grid.Row="0" Grid.Column="0">

                <c:RemoteSessionPanel
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    RemoteSessionViewSite="{Binding}"
                    Opacity="{Binding SessionState, Converter={StaticResource SessionStateToOpacityConverter}}" />

                <!-- Connection Bar -->
                <c:ConnectionBar 
                    ItemsSource ="{Binding ConnectionBarItems}" 
                    Visibility="{Binding IsConnectionBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <!-- Transparent overlay that dismisses the side bars -->
                <c:PointerPressDetector
                    Visibility="{Binding RightSideBarViewModel.Visibility}"
                    PointerPressDetected="{Binding RightSideBarViewModel.ToggleVisiblity}" />

                <!-- Right side bar -->
                <c:RightSideBarControl
                    DataContext="{Binding RightSideBarViewModel}"
                    BarVisibility="{Binding Visibility}" />

                <!-- PanKnob -->
                <c:PanKnob x:Name="PanKnob"
                           PanKnobSite="{Binding PanKnobSite}"/>

                <!--
                Belly-band container of in-session dialogs.
                The band is visible when the BellyBandViewModel property of the remote session view model
                is not null.
                -->
                <Grid Visibility="{Binding BellyBandViewModel, Converter={StaticResource NotNullToVisibilityConverter}}"
                      Background="Transparent">
                    <!--
                    Inner Grid - the belly-band itself
                    -->
                    <Grid
                        VerticalAlignment="Center"
                        Height="Auto"
                        Background="{ThemeResource DialogBackgroundColor}">

                        <ContentControl
                            Margin="{StaticResource BellyBandDefaultHorizontalSpacing}"
                            Content="{Binding BellyBandViewModel}"
                            HorizontalContentAlignment="Stretch">

                                <ContentControl.ContentTransitions>
                                    <TransitionCollection>
                                        <ContentThemeTransition />
                                    </TransitionCollection>
                                </ContentControl.ContentTransitions>

                            <ContentControl.ContentTemplateSelector>
                                <helpers:TypeNameDataTemplateSelector>

                                    <helpers:TypeNameDataTemplateSelector.Templates>

                                        <!--
                                        For the RemoteSessionFailureViewModel view model class show RemoteSessionFailureControl.
                                        The control will take the RemoteSessionFailureViewModel as its main binding.
                                        -->
                                        <DataTemplate x:Key="RemoteSessionFailureViewModel">
                                            <c:RemoteSessionFailureControl />
                                        </DataTemplate>

                                        <!--
                                        RemoteSessionInterruptionViewModel - the session got interrupted and is reconnecting.
                                        -->
                                        <DataTemplate x:Key="RemoteSessionInterruptionViewModel">
                                            <c:RemoteSessionInterruptionControl />
                                        </DataTemplate>

                                        <DataTemplate x:Key="RemoteSessionConnectingViewModel">
                                            <c:RemoteSessionConnectingControl />
                                        </DataTemplate>

                                    </helpers:TypeNameDataTemplateSelector.Templates>

                                    <helpers:TypeNameDataTemplateSelector.DefaultTemplate>
                                        <DataTemplate>
                                            <!-- Template of an unknown belly-band view model -->
                                            <Grid Background="Red">
                                                <Grid Background="White" Margin="5">
                                                    <TextBlock Margin="20,20"
                                                               FontSize="20"
                                                               FontWeight="Bold"
                                                               Foreground="Red"
                                                               Text="Unknown belly-band view"/>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </helpers:TypeNameDataTemplateSelector.DefaultTemplate>

                                </helpers:TypeNameDataTemplateSelector>
                            </ContentControl.ContentTemplateSelector>
                        </ContentControl>

                    </Grid>
                </Grid>
            </Grid>

            <ScrollBar Grid.Row="1" Grid.Column="0"
                       x:Name="HorizontalScrolbar" Orientation="Horizontal"
    		           Width ="Auto"
                       Minimum="{Binding ScrollBarModel.MinimumHorizontal}"
                       Maximum="{Binding ScrollBarModel.MaximumHorizontal}"
                       ViewportSize="{Binding ScrollBarModel.ViewportWidth}"
                       IsEnabled="True"
                       IndicatorMode="{Binding ScrollBarModel.IndicatorMode}"
                       Visibility="{Binding ScrollBarModel.VisibilityHorizontal}"
                       LargeChange="200"
                       SmallChange="20"
                       Value="{Binding ScrollBarModel.ValueHorziontal, Mode=TwoWay}"/>

            <ScrollBar Grid.Row="0" Grid.Column="1"
                       x:Name="VerticalScrolbar" Orientation="Vertical"
    		           Width ="Auto"
                       Minimum="{Binding ScrollBarModel.MinimumVertical}"
                       Maximum="{Binding ScrollBarModel.MaximumVertical}"
                       ViewportSize="{Binding ScrollBarModel.ViewportHeight}"
                       IsEnabled="True"
                       IndicatorMode="{Binding ScrollBarModel.IndicatorMode}"
                       Visibility="{Binding ScrollBarModel.VisibilityVertical}"
                       LargeChange="200"
                       SmallChange="20"
                       Value="{Binding ScrollBarModel.ValueVertical, Mode=TwoWay}"/>
            <Rectangle Grid.Row="1" Grid.Column="1" Fill="{ThemeResource SystemChromeDisabledHighColor}"
                       Visibility="{Binding ScrollBarModel.VisibilityCorner}"/>
        </Grid>
    </Canvas>

</UserControl>
